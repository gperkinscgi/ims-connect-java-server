apiVersion: apps/v1
kind: Deployment
metadata:
  name: ims-connect-server
  namespace: ims-connect
  labels:
    app: ims-connect-server
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: ims-connect-server
  template:
    metadata:
      labels:
        app: ims-connect-server
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      serviceAccountName: ims-connect-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: ims-connect-server
        image: ims-connect-server:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: ims-connect
          containerPort: 9999
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: JAVA_OPTS
          value: "-Xmx1g -Xms512m -XX:+UseG1GC -XX:+UseStringDeduplication"
        - name: SSL_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ims-connect-secrets
              key: ssl-keystore-password
        - name: SSL_KEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ims-connect-secrets
              key: ssl-key-password
        - name: SSL_TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ims-connect-secrets
              key: ssl-truststore-password
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: ssl-certs
          mountPath: /app/config/ssl
          readOnly: true
        - name: logs-volume
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /api/v1/live
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config-volume
        configMap:
          name: ims-connect-config
      - name: ssl-certs
        secret:
          secretName: ims-connect-ssl-certs
      - name: logs-volume
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ims-connect-server
              topologyKey: kubernetes.io/hostname